---
import type {
  SpotifyArtists,
  SpotifyTracks,
  TimeRange,
} from '../../libs/spotify';
import RankedItem from './ranked-item.astro';
interface Props {
  tracks?: SpotifyTracks[];
  artists?: SpotifyArtists[];
  timeRange: TimeRange;
  active: boolean;
}

const { tracks, artists, timeRange, active } = Astro.props;
---

<ol
  class:list={[
    'ranked-list grid gap-4 md:grid-cols-2 md:grid-rows-5 md:grid-flow-col',
    `${timeRange}`,
    { hidden: !active },
  ]}
>
  {
    tracks?.map((item, index) => (
      <li class='flex gap-1 p-3 lg:p-4 border border-black hover:bg-gray-100 hover:transition-colors rounded-sm items-center'>
        <span class='min-w-7' aria-hidden='true'>
          {index + 1}.
        </span>
        <RankedItem
          title={item.name}
          description={item.artists.map((artist) => artist.name).join(', ')}
          img={item.album.images}
          href={item.external_urls.spotify}
        />
      </li>
    ))
  }
  {
    artists?.map((item, index) => (
      <li class='flex gap-1 p-3 lg:p-4 border border-black hover:bg-gray-100 rhover:transition-colors rounded-sm items-center'>
        <span class=' min-w-7' aria-hidden='true'>
          {index + 1}.
        </span>
        <RankedItem
          title={item.name}
          description={item.genres.join(', ')}
          img={item.images}
          href={item.external_urls.spotify}
        />
      </li>
    ))
  }
</ol>
